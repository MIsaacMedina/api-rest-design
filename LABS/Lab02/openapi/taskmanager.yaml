openapi: 3.0.3
info:
  title: Task Manager API
  description: API para gestionar tareas con enfoque API First (demo del curso).
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Producción (ejemplo)
  - url: http://localhost:3000/v1
    description: Desarrollo local
tags:
  - name: Tasks
    description: Operaciones sobre tareas
components:
  schemas:
    Task:
      type: object
      required: [title, status]
      properties:
        id:
          type: string
          example: "64f1b2c9a8e5f9a12c34d567"
        title:
          type: string
          example: "Preparar demo API First"
        description:
          type: string
          example: "Crear contrato OpenAPI y escenarios de prueba"
        status:
          type: string
          enum: [todo, in_progress, done]
          example: "todo"
        priority:
          type: string
          enum: [low, medium, high]
          example: "medium"
        dueDate:
          type: string
          format: date-time
          example: "2025-10-21T12:00:00Z"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Error:
      type: object
      required: [error]
      properties:
        error:
          type: string
          example: "Validation failed"
        details:
          type: string
          example: "The field 'title' is required"
paths:
  /tasks:
    get:
      tags: [Tasks]
      summary: Listar tareas
      description: Obtiene la lista de tareas. Permite filtros mediante query params.
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [todo, in_progress, done]
          description: Filtrar por estado
        - in: query
          name: priority
          schema:
            type: string
            enum: [low, medium, high]
          description: Filtrar por prioridad
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Página de resultados
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Tamaño de página
      responses:
        '200':
            description: Lista paginada de tareas
            content:
              application/json:
                schema:
                  type: object
                  required: [items, page, limit, total]
                  properties:
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/Task'
                    page:
                      type: integer
                      example: 1
                    limit:
                      type: integer
                      example: 10
                    total:
                      type: integer
                      example: 37
                examples:
                  ejemplo:
                    value:
                      items:
                        - id: "64f1b2c9a8e5f9a12c34d567"
                          title: "Preparar demo API First"
                          status: "in_progress"
                          priority: "high"
                          dueDate: "2025-10-21T12:00:00Z"
                      page: 1
                      limit: 10
                      total: 1
        '400':
          description: Parámetros de consulta inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags: [Tasks]
      summary: Crear nueva tarea
      description: Crea una tarea a partir de los datos enviados.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Task'
              required:
                - title
                - status
            examples:
              ejemplo:
                value:
                  title: "Leer especificación OpenAPI"
                  description: "Repasar secciones components y paths"
                  status: "todo"
                  priority: "medium"
                  dueDate: "2025-10-25T09:00:00Z"
      responses:
        '201':
          description: Tarea creada
          headers:
            Location:
              description: URL del recurso creado
              schema:
                type: string
              example: "/v1/tasks/64f1b2c9a8e5f9a12c34d567"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                ejemplo:
                  value:
                    id: "64f1b2c9a8e5f9a12c34d567"
                    title: "Leer especificación OpenAPI"
                    status: "todo"
                    priority: "medium"
                    dueDate: "2025-10-25T09:00:00Z"
                    createdAt: "2025-10-21T10:00:00Z"
                    updatedAt: "2025-10-21T10:00:00Z"
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflicto (por ejemplo, duplicado)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tasks/{id}:
    get:
      tags: [Tasks]
      summary: Obtener una tarea por id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tarea encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: No existe una tarea con ese id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'